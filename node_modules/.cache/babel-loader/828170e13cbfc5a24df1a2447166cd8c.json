{"ast":null,"code":"var _jsxFileName = \"/workspace/template-typescript-react/src/App.tsx\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnimatedShoppingList extends Component {\n  constructor() {\n    super(...arguments); // Create an \"items\" state pre-populated with some shopping items\n\n    this.state = {\n      items: [{\n        id: 1,\n        name: 'Milk'\n      }, {\n        id: 2,\n        name: 'Yogurt'\n      }, {\n        id: 3,\n        name: 'Orange Juice'\n      }]\n    };\n  } // Called when the user changes the input field\n\n\n  handleChange(evt) {\n    if (evt.key === 'Enter') {\n      // Create a new item and set the current time as it's id\n      let newItem = {\n        id: Date.now(),\n        name: evt.target.value\n      }; // Create a new array with the previous items plus the value the user typed\n\n      let newItems = this.state.items.concat(newItem); // Clear the text field\n\n      evt.target.value = ''; // Set the new state\n\n      this.setState({\n        items: newItems\n      });\n    }\n  } // Called when the user Clicks on a shopping item\n\n\n  handleRemove(i) {\n    // Create a new array without the clicked item\n    var newItems = this.state.items;\n    newItems.splice(i, 1); // Set the new state\n\n    this.setState({\n      items: newItems\n    });\n  }\n\n  render() {\n    let shoppingItems = this.state.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: this.handleRemove.bind(this, i),\n      children: item.name\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactCSSTransitionGroup, {\n        transitionName: \"example\",\n        transitionEnterTimeout: 300,\n        transitionLeaveTimeout: 300,\n        transitionAppear: true,\n        transitionAppearTimeout: 300,\n        children: shoppingItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.newItem,\n        onKeyDown: this.handleChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\n;\nrender( /*#__PURE__*/_jsxDEV(AnimatedShoppingList, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 9\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/workspace/template-typescript-react/src/App.tsx"],"names":["React","Component","render","ReactCSSTransitionGroup","AnimatedShoppingList","constructor","arguments","state","items","id","name","handleChange","evt","key","newItem","Date","now","target","value","newItems","concat","setState","handleRemove","i","splice","shoppingItems","map","item","bind","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,uBAAP,MAAoC,mCAApC;;;AACA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AAC5CI,EAAAA,WAAW,GAAE;AACb,UAAM,GAAGC,SAAT,EADa,CAIb;;AACA,SAAKC,KAAL,GAAW;AACVC,MAAAA,KAAK,EAAE,CACP;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,IAAI,EAAE;AAAb,OADO,EAEP;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,IAAI,EAAE;AAAb,OAFO,EAGP;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,IAAI,EAAE;AAAb,OAHO;AADG,KAAX;AAOE,GAb0C,CAc3C;;;AACAC,EAAAA,YAAY,CAACC,GAAD,EAAM;AAClB,QAAGA,GAAG,CAACC,GAAJ,KAAY,OAAf,EAAuB;AACvB;AACA,UAAIC,OAAO,GAAG;AAACL,QAAAA,EAAE,EAACM,IAAI,CAACC,GAAL,EAAJ;AAAgBN,QAAAA,IAAI,EAACE,GAAG,CAACK,MAAJ,CAAWC;AAAhC,OAAd,CAFuB,CAGvB;;AACA,UAAIC,QAAQ,GAAG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBY,MAAjB,CAAwBN,OAAxB,CAAf,CAJuB,CAKvB;;AACAF,MAAAA,GAAG,CAACK,MAAJ,CAAWC,KAAX,GAAiB,EAAjB,CANuB,CAOvB;;AACA,WAAKG,QAAL,CAAc;AAACb,QAAAA,KAAK,EAAEW;AAAR,OAAd;AACC;AACA,GA1B0C,CA2B3C;;;AACAG,EAAAA,YAAY,CAACC,CAAD,EAAI;AAChB;AACA,QAAIJ,QAAQ,GAAG,KAAKZ,KAAL,CAAWC,KAA1B;AACAW,IAAAA,QAAQ,CAACK,MAAT,CAAgBD,CAAhB,EAAmB,CAAnB,EAHgB,CAIhB;;AACA,SAAKF,QAAL,CAAc;AAACb,MAAAA,KAAK,EAAEW;AAAR,KAAd;AACC;;AACDjB,EAAAA,MAAM,GAAE;AACR,QAAIuB,aAAa,GAAG,KAAKlB,KAAL,CAAWC,KAAX,CAAiBkB,GAAjB,CAAqB,CAACC,IAAD,EAAOJ,CAAP,kBACzC;AAAmB,MAAA,SAAS,EAAC,MAA7B;AACA,MAAA,OAAO,EAAE,KAAKD,YAAL,CAAkBM,IAAlB,CAAuB,IAAvB,EAA6BL,CAA7B,CADT;AAAA,gBAECI,IAAI,CAACjB;AAFN,OAAUiB,IAAI,CAAClB,EAAf;AAAA;AAAA;AAAA;AAAA,YADoB,CAApB;AAMA,wBACA;AAAA,8BACA,QAAC,uBAAD;AAAyB,QAAA,cAAc,EAAC,SAAxC;AACA,QAAA,sBAAsB,EAAE,GADxB;AAEA,QAAA,sBAAsB,EAAE,GAFxB;AAGA,QAAA,gBAAgB,EAAE,IAHlB;AAIA,QAAA,uBAAuB,EAAE,GAJzB;AAAA,kBAKCgB;AALD;AAAA;AAAA;AAAA;AAAA,cADA,eASA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWO,OAArC;AAA8C,QAAA,SAAS,EAAE,KAAKH,YAAL,CAC1DiB,IAD0D,CACrD,IADqD;AAAzD;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAcC;;AAxD0C;;AAyD3C;AACD1B,MAAM,eAAC,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,QAAD,EAA2B2B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B,CAAN","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nclass AnimatedShoppingList extends Component {\n constructor(){\n super(...arguments);\n\n\n // Create an \"items\" state pre-populated with some shopping items\n this.state={\n  items: [\n  {id:1, name: 'Milk'},\n  {id:2, name: 'Yogurt'},\n  {id:3, name: 'Orange Juice'},\n  ]\n  }\n  }\n  // Called when the user changes the input field\n  handleChange(evt) {\n  if(evt.key === 'Enter'){\n  // Create a new item and set the current time as it's id\n  let newItem = {id:Date.now(), name:evt.target.value}\n  // Create a new array with the previous items plus the value the user typed\n  let newItems = this.state.items.concat(newItem);\n  // Clear the text field\n  evt.target.value='';\n  // Set the new state\n  this.setState({items: newItems});\n  }\n  }\n  // Called when the user Clicks on a shopping item\n  handleRemove(i) {\n  // Create a new array without the clicked item\n  var newItems = this.state.items;\n  newItems.splice(i, 1);\n  // Set the new state\n  this.setState({items: newItems});\n  }\n  render(){\n  let shoppingItems = this.state.items.map((item, i) => (\n  <div key={item.id} className=\"item\"\n  onClick={this.handleRemove.bind(this, i)}>\n  {item.name}\n  </div>\n  ));\n  return(\n  <div>\n  <ReactCSSTransitionGroup transitionName=\"example\"\n  transitionEnterTimeout={300}\n  transitionLeaveTimeout={300}\n  transitionAppear={true}\n  transitionAppearTimeout={300}>\n  {shoppingItems}\n  </ReactCSSTransitionGroup>\n\n  <input type=\"text\" value={this.state.newItem} onKeyDown={this.handleChange.\n bind(this)}/>\n  </div>\n  );\n  }\n };\n render(<AnimatedShoppingList />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}